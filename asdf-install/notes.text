fails: (asdf-install:install "http://common-lisp.net/project/cl-containers/asdf-binary-locations/asdf-binary-locations_latest.tar.gz")

Need tests for new *temporary-directory*
  how: ?

why doesn't return-output-from-program use shell-command?

remove asdf-doc directory (or symlink it or something)


#### To-do - Ijara

- Cleanup current ASDFI even more
- build in untar
- build in call to CVS, SVN, DARCS, (make modular, obviously)
- supports parts of system-check
- support uninstall
- supoort logging
- support aliasing
- support experimentation
- support

#### To-do - ASDF-Install

- better place for temporary files

- clean up symlink files to use shell-command

- digitool and shell-command

- Use a condition instead
  (error "ASDF-INSTALL: can't untar ~S." packagename)

Which directory "systems" or "site-systems"

#-:digitool
(read-signature (data stream)
                (read-sequence data stream))
#+:digitool
(read-signature (data stream)
                (multiple-value-bind (reader arg)
                                     (ccl:stream-reader stream)
                  (let ((byte 0))
                    (dotimes (i (length data))
                      (unless (setf byte (funcall reader arg))
                        (error 'download-error :url  (concatenate 'string url ".asc")
                               :response 200))
                      (setf (char data i) (code-char byte))))))

#-(or :win32 :mswindows)
(return-output-from-program *gnu-tar-program*
                            (list "-C" (namestring (truename source))
                                  "-xzvf" (namestring (truename packagename))))
#+(or :win32 :mswindows)
(return-output-from-program *cygwin-bash-program*
                            (list "-l"
                                  "-c"
                                  (format nil "\"tar -C \\\"`cygpath '~A'`\\\" -xzvf \\\"`cygpath '~A'`\\\"\""
                                          (namestring (truename source))
                                          (namestring (truename packagename)))))

#+(or :sbcl :alisp) (probe-file p)
#-(or :sbcl :alisp) (and (/= (mismatch p "http://") 7)
                         (probe-file p))


- tests

- new features
-- force reinstallation of dependencies
-- use places other than the CLiki for finding files 


;;; ---------------------------------------------------------------------------

;;; port

;; pull in networking
;; get-env-variable
;; copy-stream
;; make-stream-from-url
;; make-stream-from-gpg-command
;; make-temp-sig
;; return-output-from-program
;; unlink-file ==? delete-file
;; symlink-files

#+digitool
;; system-namestring


;;; split-sequence
;;;; all we use is split-sequence-if

package
split-sequence
split-sequence-if
split-sequence-if-not
partition
partition-if
partition-if-not


